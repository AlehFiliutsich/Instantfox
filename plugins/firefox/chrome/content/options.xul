<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://shadia/content/css/global.css" type="text/css"?>


<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	xmlns:html="http://www.w3.org/1999/xhtml"
	title="instantfox options"
	resizable='yes' onunload='onclose()'>

<html:style>
.link {
	color:blue;
	cursor:pointer;
}
.link:hover {
	text-decoration:underline;
}
richlistbox {
	overflow-y:auto;
	min-height:5ch;
}
richlistitem:nth-child(odd) {
	background-color: #FBFBFB;
}
richlistitem[selected="true"] {
	background-color: #EEF9FF;
	color:#0500A0
} 
textbox{
	-moz-appearance:none;
	border:none;
	background: #EEF9FF;
	color:#777;
	width:5ch
}
textbox[conflict=true]{
	color:darkred!important;
	text-shadow: -1px -1px 2px #FFFFFF, 0pt -1px 6px red;
}
textbox[conflict=maybe]{
	color:darkred!important;
	text-shadow: 0pt -1px 3px gold;//#ffd700;
}
richlistitem[disabled="true"]>label{
	color: graytext;
}
richlistitem[selected="true"]>hbox>textbox{
	background: white;
}
richlistitem:hover{
	text-shadow: -1px -1px 2px #FFFFFF, 0pt -1px 6px gold;
}
richlistbox[seltype="multiple"]:focus > richlistitem[current="true"]{
	outline: 0px solid highlight!important;
	outline-offset: -2px!important;
} 
splitter {
	-moz-appearance:none;
}
/*textbox[type=name]{
	position:absolute;	
	margin-top:-12px;
	border-top:2px solid #9ED1E9!important;
	border-left:2px solid #9ED1E9!important;
	border-radius:15px;
	width:20ch
}
.plugin{
	position:relative;
}
input:focus{	
	color:#666;
	background: #EFFAFF;
	-moz-box-shadow:0px 0px 2px #777;
}
#container{
	background: #d8f2ff;
	margin:20px;
	box-shadow: 0pt 0pt 1px #37A0D3;
}
window,#head{
	color: #FFFFFF;
	background-color: #9ED1E9;
}
.externalContainer{
	background: #d8f2ff;
	overflow-y:auto;
	position:relative;
	width:500px;
	height:400px;
}
.image{
	width:44px;
    -moz-box-align: center;
    -moz-box-pack: center;	
}
img{
	display:-moz-box;
}
.bigger{
	font-size: 14px;
}
.bold{
	font-weight: bold;
}
.center{
	text-align: center;
} 
.key,.urls,.image{
	border: 1px solid #E8F0FC;
	font-family: "Lucida Sans Unicode","Lucida Grande",Sans-Serif;
	font-size: 12px;
	text-align: left;
	padding: 3px;
	background-color: #EEF9FF;
}
.plugin:hover{
	background-image:-moz-radial-gradient(50%  bottom, rgba(250,250,100,0.3)0%,  rgba(250,250,250,0.0) 100%);
	-moz-box-shadow:0px 0px 2px 2px rgba(250,250,100,0.8);
}

/* close button */
.close-button {
  -moz-appearance: none;
  -moz-image-region: rect(0, 64px, 16px, 48px);
  border: none;
  padding: 0px;
  list-style-image: url("chrome://global/skin/icons/close.png");
}


.tab-close-button:hover {
  -moz-image-region: rect(0, 32px, 16px, 16px);
}

.tab-close-button:hover:active {
  -moz-image-region: rect(0, 48px, 16px, 32px);
}

label[control='opacity-scale']{
	margin-top: 10px!important;
	margin-bottom: -3px!important;
}
#pin{
	position:fixed;
	top:0;
	right:0;
}
</html:style>


  <!-- for development -->
  <!-- <shadiaglue id='status-bar'/> -->
  
<tabbox flex='1'>
  <hbox id='pin' hidden='true'>
	<toolbarbutton type='checkbox' label='pin' oncommand='window.top.HH.pinPopup()'/>
  </hbox>
  <tabs onselect="if(this.selectedIndex==1){this.removeAttribute('onselect');
		this.parentNode.selectedPanel.firstChild.hidden=false;gPrefChanged=true;}">
	<tab label='engines'/>
	<tab label='appearance'/>
  </tabs>
  <tabpanels  flex='1'>
	<tabpanel orient='vertical'  flex='1'>
		<hbox>
			<vbox>
				<label value="choose language"></label>
				<menulist id="locale" oncommand = 'InstantFoxModule.pluginLoader.loadPlugins(event.target.label, rebuild)'>
					<menupopup/>
				</menulist>
				<spacer flex='1'/>
				<label value="standard shortcuts"></label>
			</vbox>
			<spacer flex='1'/>
			<image src='skin/logo.png'/>
		</hbox>
		<richlistbox id='standard-shortcuts' flex='1'
			seltype='multiple' context='context' onselect='onSelect(this)' onmouseup='openEditLigthbox(event)'/>

		<splitter>
			<label value="your shortcuts"></label>
			<spacer flex="1"></spacer>
			<toolbarbutton id="add" label='add +' oncommand='addPlugin(event)'/>
		</splitter>
		<richlistbox id='user-shortcuts' flex='1'
			seltype='multiple' context='context'  onselect='onSelect(this)' onmouseup='openEditLigthbox(event)'/>
	</tabpanel>
	<tabpanel orient='vertical'  flex='1' >
	  <prefpane align='center' hidden='false'>
	    <label value='fontsize' control='fontsize-text'/>
	    <textbox preference="fontsize"  id='fontsize-text'/>
	    <label value='opacity' control='opacity-scale'/>
		<hbox pack='center' align='center'>
			<scale value='20' min='10' max='100' flex='1' id='opacity-scale' preference-editable="true" preference="opacity" />
			<textbox preference="opacity" id='opacity-text'/>
			<label value='%'/>
		</hbox>
	   
	    <label value='keyword.URL' control='keyword-URL-menu'/>
	    <menulist editable="true" preference="keyword-URL" id="keyword-URL-menu">
		  <menupopup >
		    <menuitem label="http://www.google.com/search?q="/>
		    <menuitem label="http://www.bing.com/search?q="/>
		    <menuitem label=""/>
		  </menupopup>
	    </menulist>
		
		<preferences>
          <preference id="keyword-URL" name="keyword.URL" type="string" />
          <preference id="fontsize" name="extensions.InstantFox.fontsize" type="string" />
          <preference id="opacity" name="extensions.InstantFox.opacity" type="int" />
        </preferences>
	  </prefpane>
	</tabpanel>
  </tabpanels>
</tabbox>
  <hbox>
	<toolbarbutton id='' label='add plugin' type='menu' oncommand='' hidden='true'>
		<menupopup>
		</menupopup>
	</toolbarbutton>

	<spacer flex='1'/>
	<button label='ok' oncommand='resultOK=true;close()'/>
  </hbox>

<menupopup id="context">
	<menuitem label='instant' type='checkbox'/>
	<menuitem label='enabled' type='checkbox'/>
</menupopup>
<panel id="edit-box" ignorekeys='true' type="arrow" orient='vertical' onpopuphiding='editPopupSave(this)'>
	<hbox>
		<label value='name:'/>
		<textbox type='name' flex='1'/>
		<hbox align="center" class='image'>
			<image type='image'/>
		</hbox>
	</hbox>
	<hbox>
		<label value='url:'/>
		<textbox type='url' flex='1'/>
	</hbox>
	<hbox>
		<checkbox label='instant' type='instant'/>
		<checkbox label='contextMenu' type='context'/>
		<checkbox label='disabled' type='disabled'/>
	</hbox>
	<hbox>
		<toolbarbutton label='remove' type='remove' hidden='true' oncommand="$('edit-box').hidePopup();removePlugin(gPlugin)"/>
		<toolbarbutton label='more' hidden='true'/>
		<spacer flex='1'/>
		<toolbarbutton label='ok' onclick="$('edit-box').hidePopup()"/>
	</hbox>
</panel>
  <!-- <script type="text/javascript" src="__devel__.js"></script> -->


<script type="application/x-javascript" ><![CDATA[
var Cc = Components.classes
var Ci = Components.interfaces

Components.utils.import("resource://gre/modules/Services.jsm");
ibp = Components.utils.import('chrome://instantfox/content/instantfoxModule.js')

//************** find all avaliable locales


ibp.pluginLoader.getAvaliableLocales(function(locales){
	var menulist = $('locale')
	appendXML(menulist.firstChild,
		'<menuitem label="' + locales.join('"/><menuitem label="') + '"/>'
	)
	var sl = InstantFoxModule.selectedLocale
	var si = locales.indexOf(sl)
	if(si<0)
		si = locales.indexOf(sl.substring(0, sl.indexOf('-')))
	menulist.selectedIndex = si
})


//************* dom utils
function $(id)document.getElementById(id)
function $t(el, type)el.getElementsByAttribute('type', type)[0]
function $parent(el){
	while(el){
		if(el.id)
			return el
		el=el.parentNode
	}
}

function clean(el){
	var ch
	while(ch=el.lastChild)
		el.removeChild(ch)
}
function appendXML(element, xml){
	var range = document.createRange()
	range.selectNode(element)
	range.collapse(true)
	var fragment = range.createContextualFragment(xml)

	return element.appendChild(fragment)
}
function replaceXML(element, xml){
	var range = document.createRange()
	range.selectNode(element)	
	var fragment = range.createContextualFragment(xml)

	return element.parentNode.replaceChild(fragment, element)
}
function formatString(string, options){	
	return string.replace(/\$[^\$]*\$/g, function(x){
		var x = x.slice(1,-1)
		if(x[0]=='!')
			return options[x.substr(1)]?'false':'true'
		if(typeof options[x]!='string')
			return options[x]?options[x].toString():''
		return escapeHTML(options[x]||'')
	})
}
function escapeHTML(str) str.replace(/[&"<>]/g, function(m)"&"+escapeMap[m]+";");
var escapeMap = { "&": "amp", '"': "quot", "<": "lt", ">": "gt" }

//******************* 
var gPlugin, gPluginsChanged, gPrefChanged, resultOK=true;
openEditLigthbox = function(e){
	var item = e.target;
	if (item.getAttribute('type')!='edit-link')
		return;

	var panel = $('edit-box')	
	//document.getElementById("standard-shortcuts")._currentItem.id
	
	var item = $parent(e.target)
	gPlugin = InstantFoxModule.Plugins[item.id]
	
	$t(panel, 'disabled').checked = gPlugin.disabled
	$t(panel, 'context').checked = !gPlugin.hideFromContextMenu
	$t(panel, 'instant').checked = !gPlugin.disableInstant
	$t(panel, 'name').value = gPlugin.name
	var urlBox = $t(panel, 'url')
	urlBox.value = gPlugin.url
	urlBox.readOnly = gPlugin.type=='default'
	$t(panel, 'image').src = gPlugin.iconURI
	$t(panel, 'remove').hidden = gPlugin.type!='user'
	

	var popupBoxObject = panel.popupBoxObject;
	popupBoxObject.setConsumeRollupEvent(popupBoxObject.ROLLUP_NO_CONSUME);
	panel.openPopup(item.firstElementChild,'before_start',0,0,false,true)
	
}
editPopupSave = function(panel){
	if(!gPlugin)
		return
	if(gPlugin=='createNew'){
		var createNew = true
		gPlugin = createEmptyPlugin()
	}
	gPlugin.hideFromContextMenu =!$t(panel, 'context').checked
	gPlugin.disableInstant = !$t(panel, 'instant').checked
	gPlugin.disabled = $t(panel, 'disabled').checked

	gPlugin.name = $t(panel, 'name').value
	gPlugin.url = $t(panel, 'url').value
	//gPlugin.iconURI = $t(panel, 'image').src
	
	if(createNew){
		ibp.fixupPlugin(gPlugin)
		if(!gPlugin.url)
			return
		InstantFoxModule.Plugins[gPlugin.id] = gPlugin;
		appendXML($("user-shortcuts"), formatString(xmlFragment,gPlugin))
	}else{
		var el = $(gPlugin.id)
		var container = el.parentNode
		var si = container.selectedIndex
		replaceXML(el, formatString(xmlFragment,gPlugin))
		container.selectedIndex =si
	}
	ibp.pluginLoader.initShortcuts()
	markConflicts()
	
	gPluginsChanged = true
}
createEmptyPlugin=function(){
	var i=0
	while(InstantFoxModule.Plugins['user'+i])
		i++
	return {
		type: 'user',
		id: 'user'+i
	}	
}
addPlugin=function(e){
	var panel = $('edit-box')
		
	var item = $parent(e.target)
	gPlugin = 'createNew'
	
	$t(panel, 'disabled').checked = false
	$t(panel, 'context').checked =false
	$t(panel, 'instant').checked = false
	$t(panel, 'name').value = ''
	var urlBox = $t(panel, 'url')
	urlBox.value = ''
	urlBox.readOnly = false
	$t(panel, 'image').src = ''	
	$t(panel, 'remove').hidden = true

	var popupBoxObject = panel.popupBoxObject;
	popupBoxObject.setConsumeRollupEvent(popupBoxObject.ROLLUP_NO_CONSUME);
	panel.openPopup(item,'before_start',0,0,false,true)
}
removePlugin=function(p){
	delete InstantFoxModule.Plugins[p.id];
	ibp.pluginLoader.initShortcuts()
	markConflicts()
	
	var item = $(p.id)
	item.parentNode.removeChild(item)
	
	gPluginsChanged = true
}
//*************************

function markConflicts(){
	var cf = InstantFoxModule.ShortcutConflicts || {}

	for (var id in InstantFoxModule.Plugins){
		var key = $t($(id), 'key')

		if(cf[id])
			key.setAttribute('conflict', cf[id])
		else
			key.removeAttribute('conflict')
	}
}
onTextboxInput = function(el){
	var id = $parent(el).id
	var orig = InstantFoxModule.Plugins[id].key
	InstantFoxModule.Plugins[id].key = el.value
	dump(id,InstantFoxModule.Plugins[id].key)
	ibp.pluginLoader.initShortcuts()
	markConflicts()
	InstantFoxModule.Plugins[id].key = orig
}
onTextboxEnter = function(el){
	var id = $parent(el).id
	InstantFoxModule.Plugins[id].key = el.value
	ibp.pluginLoader.initShortcuts()
	markConflicts()
	
	gPluginsChanged = true
}
onTextboxEscape = function(el){
	var id = $parent(el).id
	el.value = InstantFoxModule.Plugins[id][el.className]
	el.blur()
}
window.addEventListener('keydown', function(e){
	var el = e.target
	if(el.className == 'key'){
		dump(e.keyCode)
		if(e.keyCode=='27'){
			onTextboxEscape(el)
		}
		if(e.keyCode=='13'){
			el.blur()
			$parent(el).parentNode.focus()
		}
		if(e.keyCode=='40'||e.keyCode=='38'){
			dump($parent(el).parentNode.selectedItem.id)
			$t($parent(el).parentNode.selectedItem,'key').focus()
		}
	}
	

}, false)
onSelect=function(rbox){
	var el=document.activeElement
	if(el.localName=='input'&&el.parentNode.parentNode.className=='key'){
		$t(rbox.selectedItem,'key').focus()
	}
}

savePlugin = function(id){
	
}

//************* 
function onclose(){
	if(gPrefChanged)
		document.getElementsByTagName('prefpane')[0].writePreferences(false)
	
	var em = Services.wm.getEnumerator('navigator:browser')
	while(em.hasMoreElements())
		em.getNext().HH.updateUserStyle()

	if(!gPluginsChanged)
		return
	if(resultOK)
		InstantFoxModule.pluginLoader.savePlugins()
	else
		InstantFoxModule.pluginLoader.loadPlugins()
}
//************* 
xmlFragment = 
	  <richlistitem align="center" id='$id$' disabled="$disabled$">
		<hbox align="center" class='image'>
			<image src="$iconURI$" />
		</hbox>
		<label value="$name$"/>
		<spacer flex='1' />
		<hbox align="center" class='key'>
			<textbox class='key' type='key' value='$key$' onblur='onTextboxEnter(this)' oninput='onTextboxInput(this)'/>
		</hbox>
		<label class='link' value='edit' type='edit-link'/>
	  </richlistitem>.toXMLString().replace(/>\s*</,'><')


rebuild = function(all){
	var xml=[], userxml = []
	var activePlugins = InstantFoxModule.Plugins
	for each(var p in activePlugins){
		if(p.url){
			(p.type=='default'?xml:userxml).push(formatString(xmlFragment,p))
		}
	}
	el = $("standard-shortcuts");
	clean(el)
	appendXML(el, xml.join(''))
	if (all) {
		el = $("user-shortcuts");
		clean(el)
		appendXML(el, userxml.join(''))
	}
	markConflicts()
}

rebuild(true)
/*
gBrowser.mCurrentBrowser.engines[0].uri

if (target.getAttribute("class").indexOf("addengine-item") != -1) {
	var searchService =
		Cc["@mozilla.org/browser/search-service;1"]
			  .getService(Ci.nsIBrowserSearchService);
	// We only detect OpenSearch files
	var type = Components.interfaces.nsISearchEngine.DATA_XML;
	searchService.addEngine(target.getAttribute("uri"), type,
							target.getAttribute("src"), false);
}
*/


]]></script>


</window>


<!-- 

InstantFox.Shortcuts


for each(var i in InstantFox.Plugins){
		if(typeof i.url == 'string')
			jn.say()
	}//jn.say(m=i.url.match(/(.[^&?#\/]*)%q(.?)/))
 -->

