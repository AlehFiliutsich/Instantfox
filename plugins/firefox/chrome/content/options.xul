<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://shadia/content/css/global.css" type="text/css"?>


<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	xmlns:html="http://www.w3.org/1999/xhtml"
	title="instantfox options"
	resizable='yes'>

<html:style>
.link {
	color:blue;
	cursor:pointer;
}
.link:hover {
	text-decoration:underline;
}
richlistbox {
	overflow-y:auto;
	min-height:5ch;
}
richlistitem:nth-child(odd) {
	background-color: #FBFBFB;
}
richlistitem[selected="true"] {
	background-color: #EEF9FF;
	color:#0500A0
} 
textbox{
	-moz-appearance:none;
	border:none;
	background: #EEF9FF;
	color:#777;
	width:5ch
}
textbox[conflict=true]{
	color:darkred!important;
	text-shadow: -1px -1px 2px #FFFFFF, 0pt -1px 6px red;
}
richlistitem[disabled="true"]>label{
	color: graytext;
}
richlistitem[selected="true"]>hbox>textbox{
	background: white;
}
splitter {
	-moz-appearance:none;
}
/*textbox[type=name]{
	position:absolute;	
	margin-top:-12px;
	border-top:2px solid #9ED1E9!important;
	border-left:2px solid #9ED1E9!important;
	border-radius:15px;
	width:20ch
}
.plugin{
	position:relative;
}
input:focus{	
	color:#666;
	background: #EFFAFF;
	-moz-box-shadow:0px 0px 2px #777;
}
#container{
	background: #d8f2ff;
	margin:20px;
	box-shadow: 0pt 0pt 1px #37A0D3;
}
window,#head{
	color: #FFFFFF;
	background-color: #9ED1E9;
}
.externalContainer{
	background: #d8f2ff;
	overflow-y:auto;
	position:relative;
	width:500px;
	height:400px;
}
.image{
	width:44px;
    -moz-box-align: center;
    -moz-box-pack: center;	
}
img{
	display:-moz-box;
}
.bigger{
	font-size: 14px;
}
.bold{
	font-weight: bold;
}
.center{
	text-align: center;
} 
.key,.urls,.image{
	border: 1px solid #E8F0FC;
	font-family: "Lucida Sans Unicode","Lucida Grande",Sans-Serif;
	font-size: 12px;
	text-align: left;
	padding: 3px;
	background-color: #EEF9FF;
}
.plugin:hover{
	background-image:-moz-radial-gradient(50%  bottom, rgba(250,250,100,0.3)0%,  rgba(250,250,250,0.0) 100%);
	-moz-box-shadow:0px 0px 2px 2px rgba(250,250,100,0.8);
}
/* close button */
.close-button {
  -moz-appearance: none;
  -moz-image-region: rect(0, 64px, 16px, 48px);
  border: none;
  padding: 0px;
  list-style-image: url("chrome://global/skin/icons/close.png");
}


.tab-close-button:hover {
  -moz-image-region: rect(0, 32px, 16px, 16px);
}

.tab-close-button:hover:active {
  -moz-image-region: rect(0, 48px, 16px, 32px);
}

</html:style>

<vbox id="vbox1" flex='1'>
  <!-- for development -->
  <shadiaglue id='status-bar'/>
  
  <!--<iframe src='chrome://instantfox/locale/index.html' width='500px' height='350px'/>-->
  <vbox class='externalContainer' flex='1'>
	<vbox flex='1'>
		<hbox>
			<label value="standard shortcuts"></label>
			<spacer flex="1"></spacer>
			<menulist id="locale">
				<menupopup/>
			</menulist>
		</hbox>
		<richlistbox id='standard-shortcuts' flex='1' seltype='multiple' context='context'/>

		<splitter>
			<label value="your shortcuts"></label>
			<spacer flex="1"></spacer>
			<toolbarbutton id="add" label='add +'/>
		</splitter>
		<richlistbox id='user-shortcuts' flex='1' seltype='multiple' context='context'/>
	</vbox>
    <vbox id='head'></vbox>
    <vbox id='container8'/>
  </vbox>
  <hbox>
	<toolbarbutton id='' label='add plugin' type='menu' oncommand='clearPrefs();updatePrefButtonVisibility()'>
		<menupopup>
		</menupopup>
	</toolbarbutton>

	<spacer flex='1'/>
	<button label='ok' oncommand='close()'/>
  </hbox>
</vbox>
<menupopup id="context">
	<menuitem label='instant' type='checkbox'/>
	<menuitem label='enabled' type='checkbox'/>
</menupopup>
<panel id="edit-box" ignorekeys='true' type="arrow" orient='vertical' onpopuphiding='editPopupSave(this)'>
	<hbox>
		<label value='name:'/>
		<textbox type='name' flex='1'/>
		<hbox align="center" class='image'>
			<image type='image'/>
		</hbox>
	</hbox>
	<hbox>
		<label value='url:'/>
		<textbox type='url' flex='1'/>
	</hbox>
	<hbox>
		<checkbox label='instant' type='instant'/>
		<checkbox label='contextMenu' type='context'/>
		<checkbox label='disabled' type='disabled'/>
	</hbox>
	<hbox>
		<toolbarbutton label='more'/>
		<spacer flex='1'/>
		<toolbarbutton label='ok' onclick="$('edit-box').hidePopup()"/>
	</hbox>
</panel>
  <!-- <script type="text/javascript" src="__devel__.js"></script> -->


<script type="application/x-javascript" ><![CDATA[
var Cc = Components.classes
var Ci = Components.interfaces

Components.utils.import("resource://gre/modules/Services.jsm");
ibp = Components.utils.import('chrome://instantFox/content/instantFoxModule.js')

//************** find all avaliable locales


ibp.pluginLoader.getAvaliableLocales(function(locales){
	var menulist = $('locale')
	appendXML(menulist.firstChild,
		'<menuitem label="' + locales.join('"/><menuitem label="') + '"/>'
	)
	menulist.selectedIndex = locales.indexOf(InstantFoxModule.selectedLocale)
})


//************* dom utils
function $(id)document.getElementById(id)
function $t(el, type)el.getElementsByAttribute('type', type)[0]
function $parent(el){
	while(el){
		if(el.id)
			return el
		el=el.parentNode
	}
}

function appendXML(element, xml){
	var range = document.createRange()
	range.selectNode(element)
	range.collapse(true)
	var fragment = range.createContextualFragment(xml)

	return element.appendChild(fragment)
}
function replaceXML(element, xml){
	var range = document.createRange()
	range.selectNode(element)	
	var fragment = range.createContextualFragment(xml)

	return element.parentNode.replaceChild(fragment, element)
}
function formatString(string, options){	
	return string.replace(/\$[^\$]*\$/g, function(x){
		var x = x.slice(1,-1)
		if(x[0]=='!')
			return options[x.substr(1)]?'false':'true'
		if(typeof options[x]!='string')
			return options[x]?options[x].toString():''
		return escapeHTML(options[x]||'')
	})
}
function escapeHTML(str) str.replace(/[&"<>]/g, function(m)"&"+escapeMap[m]+";");
var escapeMap = { "&": "amp", '"': "quot", "<": "lt", ">": "gt" }


xmlFragment = 
	  <richlistitem align="center" id='$id$' disabled="$disabled$">
		<hbox align="center" class='image'>
			<image src="$iconURI$" />
		</hbox>
		<label value="$name$"/>
		<spacer flex='1' />
		<label class='link' value='edit' onmouseup='openEditLigthbox(event)'/>
		<hbox align="center" class='key'>
			<textbox class='key' type='key' value='$key$' onblur='onTextboxEnter(this)'/>
		</hbox>
	  </richlistitem>.toXMLString().replace(/>\s*</,'><')



var xml=[], userxml = []
var activePlugins = InstantFoxModule.Plugins
for each(var p in activePlugins){
	if(p.url){
		(p.type=='default'?xml:userxml).push(formatString(xmlFragment,p))
	}
}
appendXML($("standard-shortcuts"), xml.join(''))
appendXML($("user-shortcuts"), userxml.join(''))

markConflicts()
/*
gBrowser.mCurrentBrowser.engines[0].uri

if (target.getAttribute("class").indexOf("addengine-item") != -1) {
	var searchService =
		Cc["@mozilla.org/browser/search-service;1"]
			  .getService(Ci.nsIBrowserSearchService);
	// We only detect OpenSearch files
	var type = Components.interfaces.nsISearchEngine.DATA_XML;
	searchService.addEngine(target.getAttribute("uri"), type,
							target.getAttribute("src"), false);
}
*/
var gPlugin
openEditLigthbox = function(e){
	var panel = $('edit-box')
	
	//document.getElementById("standard-shortcuts")._currentItem.id
	
	var item = $parent(e.target)
	gPlugin = InstantFoxModule.Plugins[item.id]
	
	$t(panel, 'disabled').checked = gPlugin.disabled
	$t(panel, 'context').checked = !gPlugin.hideFromContextMenu
	$t(panel, 'instant').checked = !gPlugin.disableInstant
	$t(panel, 'name').value = gPlugin.name
	$t(panel, 'url').value = gPlugin.url
	$t(panel, 'image').src = gPlugin.iconURI
	
	if(panel.state=='open'){
		var r = item.boxObject
		dump(r.screenX, r.screenY+r.width)
		panel.moveTo(r.screenX, r.screenY+r.width)
	}else{
		/*var r = item.getBoundingClientRect()
		var popupBoxObject = panel.popupBoxObject;
		popupBoxObject.setConsumeRollupEvent(popupBoxObject.ROLLUP_NO_CONSUME);
		el.showPopup(anchorElement, -1, -1, "popup", "bottomleft", "topleft");
		panel.openPopup(null, "after_start", r.left, r.bottom)*/
		var popupBoxObject = panel.popupBoxObject;
		popupBoxObject.setConsumeRollupEvent(popupBoxObject.ROLLUP_NO_CONSUME);
		panel.openPopup(item.firstElementChild,'before_start',0,0,false,true)
	}
}
editPopupSave = function(panel){
	gPlugin.hideFromContextMenu =!$t(panel, 'context').checked
	gPlugin.disableInstant = !$t(panel, 'instant').checked
	gPlugin.disabled = $t(panel, 'disabled').checked
	// smaller json file
	if(!gPlugin.disabled)
		delete gPlugin.disabled
	if(!gPlugin.disableInstant)
		delete gPlugin.disableInstant
	if(!gPlugin.hideFromContextMenu)
		delete gPlugin.hideFromContextMenu

	gPlugin.name = $t(panel, 'name').value
	gPlugin.url = $t(panel, 'url').value
	//gPlugin.iconURI = $t(panel, 'image').src
	
	var el = $(gPlugin.id)
	var container = el.parentNode
	var si = container.selectedIndex
	replaceXML(el, formatString(xmlFragment,gPlugin))
	container.selectedIndex =si
	ibp.pluginLoader.initShortcuts()
	markConflicts()
}
function markConflicts(){
	if(!InstantFoxModule.ShortcutConflicts) 
		InstantFoxModule.ShortcutConflicts = {}

	for (var id in InstantFoxModule.Plugins){
		var key = $t($(id), 'key')
		dump(key)
		if(InstantFoxModule.ShortcutConflicts[id])
			key.setAttribute('conflict', true)
		else
			key.removeAttribute('conflict')
	}
}
onTextboxEnter = function(el){
	var id = $parent(el).id
	InstantFoxModule.Plugins[id].key = el.value
	ibp.pluginLoader.initShortcuts()
	markConflicts()
}
onTextboxEscape = function(el){
	var id = $parent(el).id
	el.value = InstantFoxModule.Plugins[id][el.className]
	el.blur()
}
window.addEventListener('keydown', function(e){
	var el = e.target
	if(el.className == 'key'){
		dump(e.keyCode)
		if(e.keyCode=='27'){
			onTextboxEscape(el)
		}
		if(e.keyCode=='13'){
			el.blur()
			$parent(el).parentNode.focus()
		}
	}
	

}, false)

savePlugin = function(id){
	
}

]]></script>


</window>


<!-- 

InstantFox.Shortcuts


for each(var i in InstantFox.Plugins){
		if(typeof i.url == 'string')
			jn.say()
	}//jn.say(m=i.url.match(/(.[^&?#\/]*)%q(.?)/))
 -->

